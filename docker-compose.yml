volumes:
  users_sqlserver_data:
  rabbitmq_data:
  appointments_sqlserver_data:

services:
  rabbitmq:
    image: masstransit/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  users_api:
    build:
      context: ./users
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - users_sqlserver.configurator

  appointments_api:
    build:
      context: ./appointments
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - appointments_sqlserver.configurator
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:8081

  users_sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=S3cur3P@ssW0rd
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    volumes:
      - users_sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'S3cur3P@ssW0rd' -C -Q 'SELECT 1' || exit 1",
        ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  appointments_sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=S3cur3P@ssW0rd
      - MSSQL_PID=Developer
    ports:
      - 1434:1433
    volumes:
      - appointments_sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'S3cur3P@ssW0rd' -C -Q 'SELECT 1' || exit 1",
        ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  users_sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      users_sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      echo "Creating DB...";
      opt/mssql-tools18/bin/sqlcmd -S users_sqlserver -U sa -P 'S3cur3P@ssW0rd' -d master -C -Q "IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = '\''HackathonUsers'\'') CREATE DATABASE [HackathonUsers]";
      echo "All done!";
      '

  appointments_sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./appointments/init:/docker-entrypoint-initdb.d
    depends_on:
      appointments_sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      echo "Creating DB...";
      opt/mssql-tools18/bin/sqlcmd -S appointments_sqlserver -U sa -P 'S3cur3P@ssW0rd' -d master -C -Q "IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = '\''AppointmentsDb'\'') CREATE DATABASE [AppointmentsDb]";
      echo "All done!";
      '
